name: Build

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: make
      run:  make

    - name: Cache valgrind
      uses: actions/cache@v2
      id: cache-valgrind
      with:
        path: "~/valgrind"
        key: "3.18.1"

    - name: Install valgrind
      env:
        CACHE_HIT: ${{steps.cache-valgrind.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" == 'true' ]]; then
          sudo cp --verbose --force --recursive ~/valgrind/* /
        else
          sudo apt-get install --yes valgrind
          mkdir -p ~/valgrind
          sudo dpkg -L valgrind | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/valgrind/
        fi

    - name: run valgrind # TODO put run content into a separate shell script you lazy fuck?
      shell: bash {0} # this basically means, don't exit when command returns 1
      run: |
        valgrind_error_code=5
        valgrind_params="--leak-check=full --error-exitcode=$valgrind_error_code"
        valgrind_run_options=(
          "valgrind $valgrind_params ./bin/run ./resources/adjacencyMatrix3.txt --dijkstra 1 7"
          "valgrind $valgrind_params ./bin/run ./resources/adjacencyMatrix3.txt --bfs 1 7"
          "valgrind $valgrind_params ./bin/run ./resources/missingValuesMatrix.txt --bfs 1 7"
          "valgrind $valgrind_params ./bin/run ./resources/invalidAdjacencyMatrix.txt --bfs 1 7"
        )
        exitcode=0
        for valgrind_run_option in "${valgrind_run_options[@]}"
        do
          $valgrind_run_option
          if [ $? -eq $valgrind_error_code ]; then
            exitcode=1
          fi
        done
        exit $exitcode
